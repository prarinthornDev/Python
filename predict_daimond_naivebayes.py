# -*- coding: utf-8 -*-
"""NaiveBayes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19Z3eMyykZa180g-7wAoqHwU_eoiPNC4J
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

url = 'https://raw.githubusercontent.com/60122201046/DataMining/master/diamonds.csv'
df = pd.read_csv(url,index_col=0, parse_dates=True)
df.head()

#ทำการแปลงในส่วนของโค้ด ที่เป็น String ให้อยู่ในรูปของ float เพื่อมาใช้ในการคำนวณ
cut_dict = {'Fair' : 1, 'Good' : 2, 'Very Good' : 3, 'Premium' : 4, 'Ideal' : 5}
clarity_dict ={ 'I1' : 1, 'SI2' : 2, 'SI1' : 3, 'VS2' : 4, 'VS1' : 5, 'VVS2' : 6, 'VVS1' : 7 , 'IF' : 8}
color_dict = {'D':7, 'E':6, 'F':5, 'G':4, 'H':3, 'I':2, 'J':1}

#ทำการแทนค่าทางที่ทำการแปลงได้ให้มาแทนลงใน ตัว  Attribute เดิม
df['clarity'] = df['clarity'].map(clarity_dict)
df['cut'] = df['cut'].map(cut_dict)
df['color'] = df['color'].map(color_dict)

x = df.iloc[:, [0,3]].values
y = df.iloc[:, 6].values

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.20, random_state = 7)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaler.fit(X_train)

X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test)

from sklearn.naive_bayes import GaussianNB
model = GaussianNB()
model.fit(X_train,y_train)

y_pred = model.predict(X_test)

from sklearn.metrics import classification_report, confusion_matrix,accuracy_score
print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))

score = accuracy_score(y_test,y_pred)
print('{:.2f}%'.format(score*100))